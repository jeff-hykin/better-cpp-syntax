- source: static
  scopesBegin:
    - meta.function.definition
  scopes:
    - storage.modifier.static
- source: QAccessibleInterface
  scopes:
    - meta.qualified-type
    - entity.name.type
- source: '*'
  scopes:
    - storage.modifier.pointer
- source: factory
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: const
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - storage.modifier.specifier.const
- source: QString
  scopes:
    - entity.name.type.parameter
- source: '&'
  scopes:
    - storage.modifier.reference
- source: classname
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: QObject
  scopes:
    - entity.name.type.parameter
- source: '*'
  scopes:
    - storage.modifier.pointer
- source: object
  scopes:
    - variable.parameter
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: if
  scopesBegin:
    - meta.body.function.definition
  scopes:
    - keyword.control.if
- source: (
  scopesBegin:
    - meta.parens
  scopes:
    - punctuation.section.parens.begin.bracket.round
- source: classname
  scopes:
    - variable.lower-case
    - variable.other.unknown.classname
- source: '=='
  scopes:
    - keyword.operator.comparison
- source: QLatin1String
  scopes:
    - entity.name.function.call
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.call
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin
- source: VBase
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - string.quoted.double
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.call
- source: '&&'
  scopes:
    - keyword.operator.logical
- source: object
  scopes:
    - variable.lower-case
    - variable.other.unknown.object
- source: '&&'
  scopes:
    - keyword.operator.logical
- source: object
  scopes:
    - variable.lower-case
    - variable.other.object.access.object
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: isWidgetType
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round
  scopesEnd:
    - meta.parens
- source: return
  scopes:
    - keyword.control.return
- source: new
  scopes:
    - keyword.operator.wordlike
    - keyword.operator.new
- source: Base
  scopes:
    - entity.name.function.call
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.call
- source: static_cast
  scopes:
    - keyword.operator.wordlike
    - keyword.operator.cast.static_cast
- source: <
  scopes:
    - keyword.operator.comparison
- source: QWidget
  scopes:
    - variable.other.unknown.QWidget
- source: '*'
  scopes:
    - keyword.operator.arithmetic
- source: '>'
  scopes:
    - keyword.operator.comparison
- source: (
  scopesBegin:
    - meta.parens
  scopes:
    - punctuation.section.parens.begin.bracket.round
- source: object
  scopes:
    - variable.lower-case
    - variable.other.unknown.object
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round
  scopesEnd:
    - meta.parens
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.call
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: return
  scopes:
    - keyword.control.return
- source: '0'
  scopes:
    - constant.numeric.decimal
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.function.definition
