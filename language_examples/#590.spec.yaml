- source: '#'
  scopesBegin:
    - meta.preprocessor.macro
    - keyword.control.directive.define
  scopes:
    - punctuation.definition.directive
- source: define
  scopesEnd:
    - keyword.control.directive.define
- source: DOCTEST_IMPLEMENT_FIXTURE
  scopes:
    - entity.name.function.preprocessor
- source: (
  scopes:
    - punctuation.definition.parameters.begin.preprocessor
- source: der
  scopesBegin:
    - meta.function.preprocessor.parameters
  scopes:
    - variable.parameter.preprocessor
- source: ','
  scopes:
    - punctuation.separator.parameters
- source: base
  scopes:
    - variable.parameter.preprocessor
- source: ','
  scopes:
    - punctuation.separator.parameters
- source: func
  scopes:
    - variable.parameter.preprocessor
- source: ','
  scopes:
    - punctuation.separator.parameters
- source: decorators
  scopes:
    - variable.parameter.preprocessor
  scopesEnd:
    - meta.function.preprocessor.parameters
- source: )
  scopes:
    - punctuation.definition.parameters.end.preprocessor
- source: \
  scopes:
    - constant.character.escape.line-continuation
- source: namespace
  scopesBegin:
    - meta.block.namespace
    - meta.head.namespace
  scopes:
    - keyword.other.namespace.definition
    - storage.type.namespace.definition
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.namespace
  scopesEnd:
    - meta.head.namespace
- source: \
  scopesBegin:
    - meta.body.namespace
  scopes:
    - constant.character.escape.line-continuation
- source: struct
  scopesBegin:
    - meta.block.struct
  scopes:
    - meta.head.struct
    - storage.type.struct
- source: der
  scopes:
    - entity.name.type.struct
- source: ':'
  scopesBegin:
    - meta.head.struct
  scopes:
    - punctuation.separator.colon.inheritance
- source: public
  scopes:
    - storage.type.modifier.access.public
- source: base
  scopes:
    - meta.qualified-type
    - entity.name.type
- source: \
  scopes:
    - constant.character.escape.line-continuation
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.struct
  scopesEnd:
    - meta.head.struct
- source: \
  scopesBegin:
    - meta.body.struct
  scopes:
    - constant.character.escape.line-continuation
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: f
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
  scopesEnd:
    - meta.function.definition
    - meta.head.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: \
  scopes:
    - constant.character.escape.line-continuation
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.struct
  scopesEnd:
    - meta.body.struct
- source: ;
  scopes:
    - punctuation.terminator.statement
  scopesEnd:
    - meta.block.struct
- source: \
  scopes:
    - constant.character.escape.line-continuation
- source: static
  scopesBegin:
    - meta.function.definition
  scopes:
    - storage.modifier.static
- source: void
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: \
  scopesBegin:
    - meta.body.function.definition
  scopes:
    - constant.character.escape.line-continuation
- source: der
  scopesBegin:
    - meta.declaration
  scopes:
    - meta.qualified-type
    - entity.name.type
- source: v
  scopes:
    - meta.declaration
    - variable.lower-case
    - variable.other.declare
  scopesEnd:
    - meta.declaration
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: \
  scopes:
    - constant.character.escape.line-continuation
- source: v
  scopes:
    - variable.lower-case
    - variable.other.object.access.v
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: f
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: \
  scopes:
    - constant.character.escape.line-continuation
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
    - meta.body.function.definition
- source: \
  scopes:
    - constant.character.escape.line-continuation
- source: DOCTEST_REGISTER_FUNCTION
  scopes:
    - entity.name.function.call.upper-case
    - entity.name.function.call
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.call
    - punctuation.section.arguments.begin.bracket.round.function.call.upper-case
- source: DOCTEST_EMPTY
  scopes:
    - variable.snake-case
    - variable.other.unknown.DOCTEST_EMPTY
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: func
  scopes:
    - variable.lower-case
    - variable.other.unknown.func
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: decorators
  scopes:
    - variable.lower-case
    - variable.other.unknown.decorators
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.call
    - punctuation.section.arguments.begin.bracket.round.function.call.upper-case
- source: \
  scopes:
    - constant.character.escape.line-continuation
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.namespace
  scopesEnd:
    - meta.block.namespace
    - meta.body.namespace
- source: \
  scopes:
    - constant.character.escape.line-continuation
- source: inline
  scopes:
    - storage.modifier.specifier.functional.pre-parameters.inline
- source: DOCTEST_NOINLINE
  scopes:
    - variable.snake-case
    - variable.other.unknown.DOCTEST_NOINLINE
- source: void
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: der
  scopes:
    - entity.name.scope-resolution
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution
- source: f
  scopes:
    - entity.name.function.call
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.call
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.call
