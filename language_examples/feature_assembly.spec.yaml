- source: asm
  scopesBegin:
    - meta.asm
  scopes:
    - storage.type.asm
- source: (
  scopes:
    - punctuation.section.parens.begin.bracket.round.assembly
- source: R
  scopesBegin:
    - string.quoted.double
  scopes:
    - meta.encoding
- source: '"'
  scopes:
    - punctuation.definition.string.begin.assembly
- source: (
  scopesBegin:
    - meta.embedded.assembly
- source: .globl func
- source: '    .type func, @function'
- source: '    func:'
- source: '    .cfi_startproc'
- source: '    movl $7, %eax'
- source: '    retl'
- source: '    .cfi_endproc'
- source: )
  scopesEnd:
    - meta.embedded.assembly
- source: '"'
  scopes:
    - punctuation.definition.string.end.assembly
  scopesEnd:
    - string.quoted.double
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round.assembly
  scopesEnd:
    - meta.asm
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: int
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: main
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: int
  scopesBegin:
    - meta.body.function.definition
    - meta.assignment
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: 'n'
  scopesBegin:
    - meta.assignment
  scopes:
    - variable.lower-case
    - variable.other.assignment
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment
- source: func
  scopes:
    - entity.name.function.call
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.call
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.call
  scopesEnd:
    - meta.assignment
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: //
  scopesBegin:
    - comment.line.double-slash
  scopes:
    - punctuation.definition.comment
- source: ' extended inline assembly'
  scopesEnd:
    - comment.line.double-slash
- source: asm
  scopesBegin:
    - meta.asm
  scopes:
    - storage.type.asm
- source: (
  scopes:
    - punctuation.section.parens.begin.bracket.round.assembly
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin.assembly
- source: 'leal (%0,%0,4),%0'
  scopes:
    - meta.embedded.assembly
- source: '"'
  scopes:
    - punctuation.definition.string.end.assembly
  scopesEnd:
    - string.quoted.double
- source: ':'
  scopes:
    - punctuation.separator.delimiter.colon.assembly
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin.assembly
- source: '=r'
  scopes:
    - meta.embedded.assembly
- source: '"'
  scopes:
    - punctuation.definition.string.end.assembly
  scopesEnd:
    - string.quoted.double
- source: (
  scopes:
    - punctuation.section.parens.begin.bracket.round.assembly.inner
- source: 'n'
  scopes:
    - variable.lower-case
    - variable.other.unknown.n
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round.assembly.inner
- source: ':'
  scopes:
    - punctuation.separator.delimiter.colon.assembly
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin.assembly
- source: '0'
  scopes:
    - meta.embedded.assembly
- source: '"'
  scopes:
    - punctuation.definition.string.end.assembly
  scopesEnd:
    - string.quoted.double
- source: (
  scopes:
    - punctuation.section.parens.begin.bracket.round.assembly.inner
- source: 'n'
  scopes:
    - variable.lower-case
    - variable.other.unknown.n
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round.assembly.inner
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round.assembly
  scopesEnd:
    - meta.asm
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: //
  scopesBegin:
    - comment.line.double-slash
  scopes:
    - punctuation.definition.comment
- source: ' standard inline assembly'
  scopesEnd:
    - comment.line.double-slash
- source: asm
  scopesBegin:
    - meta.asm
  scopes:
    - storage.type.asm
- source: (
  scopes:
    - punctuation.section.parens.begin.bracket.round.assembly
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin.assembly
- source: 'movq $60, %rax'
  scopesBegin:
    - meta.embedded.assembly
- source: \n
  scopesBegin:
    - constant.character.escape
- source: \t
  scopesEnd:
    - meta.embedded.assembly
    - constant.character.escape
- source: '"'
  scopes:
    - punctuation.definition.string.end.assembly
  scopesEnd:
    - string.quoted.double
- source: //
  scopesBegin:
    - comment.line.double-slash
  scopes:
    - punctuation.definition.comment
- source: ' the exit syscall number on Linux'
  scopesEnd:
    - comment.line.double-slash
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin.assembly
- source: 'movq $2,  %rdi'
  scopesBegin:
    - meta.embedded.assembly
- source: \n
  scopesBegin:
    - constant.character.escape
- source: \t
  scopesEnd:
    - meta.embedded.assembly
    - constant.character.escape
- source: '"'
  scopes:
    - punctuation.definition.string.end.assembly
  scopesEnd:
    - string.quoted.double
- source: //
  scopesBegin:
    - comment.line.double-slash
  scopes:
    - punctuation.definition.comment
- source: ' this program returns 2'
  scopesEnd:
    - comment.line.double-slash
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin.assembly
- source: syscall
  scopes:
    - meta.embedded.assembly
- source: '"'
  scopes:
    - punctuation.definition.string.end.assembly
  scopesEnd:
    - string.quoted.double
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round.assembly
  scopesEnd:
    - meta.asm
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.function.definition
