- source: template
  scopes:
    - storage.type.template
- source: <
  scopes:
    - punctuation.section.angle-brackets.begin.template.definition
- source: bool
  scopesBegin:
    - meta.template.definition
  scopes:
    - storage.type.template.argument.bool
- source: check
  scopes:
    - entity.name.type.template
- source: '='
  scopes:
    - keyword.operator.assignment
- source: '!'
  scopes:
    - keyword.operator.logical
- source: Identity
  scopes:
    - storage.type.template.argument.Identity
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma.template.argument
- source: class
  scopes:
    - storage.type.template.argument.class
- source: '='
  scopes:
    - keyword.operator.assignment
- source: std
  scopes:
    - entity.name.scope-resolution.template.definition
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution.template.definition
- source: enable_if_t
  scopes:
    - support.type.posix-reserved
    - support.type.built-in.posix-reserved
- source: <
  scopesBegin:
    - meta.template.call
    - meta.template.call
  scopes:
    - punctuation.section.angle-brackets.begin.template.call
- source: check
  scopes:
    - meta.qualified-type
    - entity.name.type
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.call
  scopesEnd:
    - meta.template.definition
    - meta.template.call
    - meta.template.call
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.definition
- source: result_type
  scopesBegin:
    - meta.function.definition.special.operator-overload
  scopes:
    - meta.qualified-type
    - entity.name.type
- source: operator
  scopesBegin:
    - meta.head.function.definition.special.operator-overload
  scopes:
    - keyword.other.operator.overload
- source: ()
  scopes:
    - entity.name.operator
- source: (
  scopes:
    - >-
      punctuation.section.parameters.begin.bracket.round.special.operator-overload
- source: argument_type
  scopesBegin:
    - meta.function.definition.parameters.special.operator-overload
    - meta.parameter
  scopes:
    - entity.name.type.parameter
- source: k
  scopes:
    - variable.parameter
  scopesEnd:
    - meta.function.definition.parameters.special.operator-overload
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.special.operator-overload
- source: '{'
  scopes:
    - >-
      punctuation.section.block.begin.bracket.curly.function.definition.special.operator-overload
  scopesEnd:
    - meta.head.function.definition.special.operator-overload
- source: '}'
  scopes:
    - meta.body.function.definition.special.operator-overload
    - >-
      punctuation.section.block.end.bracket.curly.function.definition.special.operator-overload
  scopesEnd:
    - meta.function.definition.special.operator-overload
- source: template
  scopes:
    - storage.type.template
- source: <
  scopes:
    - punctuation.section.angle-brackets.begin.template.definition
- source: class
  scopesBegin:
    - meta.template.definition
  scopes:
    - storage.type.template.argument.class
- source: A
  scopes:
    - entity.name.type.template
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma.template.argument
- source: class
  scopes:
    - storage.type.template.argument.class
- source: B
  scopes:
    - entity.name.type.template
- source: '='
  scopes:
    - keyword.operator.assignment
- source: ' C'
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma.template.argument
- source: typename
  scopes:
    - storage.type.template.argument.typename
- source: D
  scopes:
    - entity.name.type.template
- source: '='
  scopes:
    - keyword.operator.assignment
- source: ' E'
  scopesEnd:
    - meta.template.definition
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.definition
