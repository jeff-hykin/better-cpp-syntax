- source: static
  scopesBegin:
    - meta.function.definition
  scopes:
    - storage.modifier.static
- source: void
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: a
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: a
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - entity.name.type.parameter
- source: a
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - entity.name.type.parameter
- source: a
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - entity.name.type.parameter
- source: a
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - entity.name.type.parameter
- source: a
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - entity.name.type.parameter
- source: a
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: bool
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: a
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: bool
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: a
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: bool
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: a
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: bool
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: a
  scopes:
    - variable.parameter
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: a
  scopesBegin:
    - meta.body.function.definition
    - meta.declaration
  scopes:
    - meta.qualified-type
    - entity.name.type
- source: a
  scopes:
    - meta.declaration
    - variable.lower-case
    - variable.other.declare
  scopesEnd:
    - meta.declaration
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: a
  scopes:
    - entity.name.function.call
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.call
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.call
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: a
  scopes:
    - variable.lower-case
    - variable.other.object.access.a
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: '&'
  scopes:
    - keyword.operator.bitwise
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: for
  scopes:
    - keyword.control.for
- source: (
  scopesBegin:
    - meta.parens
  scopes:
    - punctuation.section.parens.begin.bracket.round
- source: auto
  scopesBegin:
    - meta.parens.control.for
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: a
  scopes:
    - variable.other.object.declare.for
- source: ':'
  scopes:
    - punctuation.separator.colon.range-based
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
  scopesEnd:
    - meta.parens.control.for
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round
  scopesEnd:
    - meta.parens
- source: '{'
  scopesBegin:
    - meta.block
  scopes:
    - punctuation.section.block.begin.bracket.curly
- source: auto
  scopesBegin:
    - meta.assignment
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: '&'
  scopes:
    - storage.modifier.reference
- source: a
  scopesBegin:
    - meta.assignment
  scopes:
    - variable.lower-case
    - variable.other.assignment
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment
- source: a
  scopes:
    - variable.lower-case
    - variable.other.object.access.a
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: a
  scopes:
    - variable.other.property
  scopesEnd:
    - meta.assignment
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: auto
  scopesBegin:
    - meta.assignment
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: a
  scopesBegin:
    - meta.assignment
  scopes:
    - variable.lower-case
    - variable.other.assignment
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment
- source: a
  scopes:
    - variable.lower-case
    - variable.other.object.access.a
- source: .
  scopes:
    - punctuation.separator.dot-access
- source: a
  scopes:
    - variable.other.property
  scopesEnd:
    - meta.assignment
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: if
  scopes:
    - keyword.control.if
- source: (
  scopesBegin:
    - meta.parens
  scopes:
    - punctuation.section.parens.begin.bracket.round
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: '&&'
  scopes:
    - keyword.operator.logical
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round
  scopesEnd:
    - meta.parens
- source: '{'
  scopesBegin:
    - meta.block
  scopes:
    - punctuation.section.block.begin.bracket.curly
- source: switch
  scopesBegin:
    - meta.block.switch
    - meta.head.switch
  scopes:
    - keyword.control.switch
- source: (
  scopesBegin:
    - meta.conditional.switch
  scopes:
    - punctuation.section.parens.begin.bracket.round.conditional.switch
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round.conditional.switch
  scopesEnd:
    - meta.conditional.switch
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.switch
  scopesEnd:
    - meta.head.switch
- source: case
  scopesBegin:
    - meta.body.switch
    - meta.conditional.case
  scopes:
    - keyword.control.case
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: ':'
  scopes:
    - punctuation.separator.colon.case
  scopesEnd:
    - meta.conditional.case
- source: a
  scopes:
    - variable.lower-case
    - variable.other.object.access.a
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: a
  scopes:
    - variable.lower-case
    - variable.other.object.access.a
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: )
  scopesBegin:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: )
  scopesEnd:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: break
  scopes:
    - keyword.control.break
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: case
  scopesBegin:
    - meta.conditional.case
  scopes:
    - keyword.control.case
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: ':'
  scopes:
    - punctuation.separator.colon.case
  scopesEnd:
    - meta.conditional.case
- source: a
  scopes:
    - variable.lower-case
    - variable.other.object.access.a
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: a
  scopes:
    - variable.lower-case
    - variable.other.object.access.a
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: )
  scopesBegin:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: )
  scopesEnd:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: break
  scopes:
    - keyword.control.break
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: case
  scopesBegin:
    - meta.conditional.case
  scopes:
    - keyword.control.case
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: ':'
  scopes:
    - punctuation.separator.colon.case
  scopesEnd:
    - meta.conditional.case
- source: a
  scopes:
    - variable.lower-case
    - variable.other.object.access.a
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: a
  scopes:
    - variable.lower-case
    - variable.other.object.access.a
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: )
  scopesBegin:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: )
  scopesEnd:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: break
  scopes:
    - keyword.control.break
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: case
  scopesBegin:
    - meta.conditional.case
  scopes:
    - keyword.control.case
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: ':'
  scopes:
    - punctuation.separator.colon.case
  scopesEnd:
    - meta.conditional.case
- source: a
  scopes:
    - variable.lower-case
    - variable.other.object.access.a
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: a
  scopes:
    - variable.lower-case
    - variable.other.object.access.a
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: )
  scopesBegin:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: )
  scopesEnd:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: break
  scopes:
    - keyword.control.break
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.switch
  scopesEnd:
    - meta.block.switch
    - meta.body.switch
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly
  scopesEnd:
    - meta.block
- source: a
  scopes:
    - entity.name.function.call
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.call
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.call
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly
  scopesEnd:
    - meta.block
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.body.function.definition
- source: static
  scopes:
    - storage.modifier.static
- source: void
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: a
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: a
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - entity.name.type.parameter
- source: a
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - entity.name.type.parameter
- source: a
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - entity.name.type.parameter
- source: a
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - entity.name.type.parameter
- source: a
  scopes:
    - variable.parameter
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: a
  scopesBegin:
    - meta.body.function.definition
    - meta.declaration
  scopes:
    - meta.qualified-type
    - entity.name.type
- source: a
  scopes:
    - meta.declaration
    - variable.lower-case
    - variable.other.declare
  scopesEnd:
    - meta.declaration
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: a
  scopesBegin:
    - meta.assignment
  scopes:
    - meta.qualified-type
    - entity.name.type
- source: a
  scopesBegin:
    - meta.assignment
  scopes:
    - variable.lower-case
    - variable.other.assignment
- source: '='
  scopes:
    - keyword.operator.assignment
  scopesEnd:
    - meta.assignment
- source: '0'
  scopes:
    - constant.numeric.decimal
  scopesEnd:
    - meta.assignment
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: a
  scopes:
    - variable.lower-case
    - variable.other.object.access.a
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: a
  scopes:
    - entity.name.function.call
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.call
- source: a
  scopes:
    - variable.lower-case
    - variable.other.object.access.a
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.call
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: a
  scopes:
    - variable.lower-case
    - variable.other.object.access.a
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: a
  scopes:
    - variable.lower-case
    - variable.other.object.access.a
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: a
  scopes:
    - entity.name.function.call
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.call
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.call
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: a
  scopes:
    - variable.lower-case
    - variable.other.object.access.a
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: '&'
  scopes:
    - keyword.operator.bitwise
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: for
  scopes:
    - keyword.control.for
- source: (
  scopesBegin:
    - meta.parens
  scopes:
    - punctuation.section.parens.begin.bracket.round
- source: auto
  scopesBegin:
    - meta.parens.control.for
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: a
  scopes:
    - variable.other.object.declare.for
- source: ':'
  scopes:
    - punctuation.separator.colon.range-based
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
  scopesEnd:
    - meta.parens.control.for
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round
  scopesEnd:
    - meta.parens
- source: '{'
  scopesBegin:
    - meta.block
  scopes:
    - punctuation.section.block.begin.bracket.curly
- source: a
  scopes:
    - entity.name.function.call
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.call
- source: a
  scopes:
    - variable.lower-case
    - variable.other.object.access.a
- source: '->'
  scopes:
    - punctuation.separator.pointer-access
- source: a
  scopes:
    - entity.name.function.member
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.function.member
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.member
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.function.call
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly
  scopesEnd:
    - meta.block
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.function.definition
