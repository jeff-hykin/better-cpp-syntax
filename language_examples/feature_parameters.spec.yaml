- source: '#'
  scopesBegin:
    - meta.preprocessor.include
    - keyword.control.directive.include
  scopes:
    - punctuation.definition.directive
- source: include
  scopesEnd:
    - keyword.control.directive.include
- source: <
  scopesBegin:
    - string.quoted.other.lt-gt.include
  scopes:
    - punctuation.definition.string.begin
- source: string
- source: '>'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - string.quoted.other.lt-gt.include
- source: '#'
  scopesBegin:
    - keyword.control.directive.include
  scopes:
    - punctuation.definition.directive
- source: include
  scopesEnd:
    - keyword.control.directive.include
- source: <
  scopesBegin:
    - string.quoted.other.lt-gt.include
  scopes:
    - punctuation.definition.string.begin
- source: iostream
- source: '>'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - string.quoted.other.lt-gt.include
- source: '#'
  scopesBegin:
    - keyword.control.directive.include
  scopes:
    - punctuation.definition.directive
- source: include
  scopesEnd:
    - keyword.control.directive.include
- source: <
  scopesBegin:
    - string.quoted.other.lt-gt.include
  scopes:
    - punctuation.definition.string.begin
- source: vector
- source: '>'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - meta.preprocessor.include
    - string.quoted.other.lt-gt.include
- source: typedef
  scopes:
    - keyword.other.typedef
- source: int
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: Type
  scopes:
    - variable.other.unknown.Type
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: auto
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
- source: '='
  scopes:
    - keyword.operator.assignment
- source: '10'
  scopes:
    - constant.numeric.decimal
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: Type
  scopes:
    - meta.qualified-type
    - entity.name.type
- source: (
  scopes:
    - punctuation.section.parens.begin.bracket.round.function.pointer
- source: '*'
  scopes:
    - punctuation.definition.function.pointer.dereference
- source: fn_ptr
  scopes:
    - variable.other.definition.pointer.function
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round.function.pointer
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round.function.pointer
- source: const
  scopesBegin:
    - meta.parameter
  scopes:
    - storage.modifier.specifier.const
- source: int
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
  scopesEnd:
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.function.pointer
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: Type
  scopes:
    - meta.qualified-type
    - entity.name.type
- source: (
  scopes:
    - punctuation.section.parens.begin.bracket.round.function.pointer
- source: '*'
  scopes:
    - punctuation.definition.function.pointer.dereference
- source: fn_ptr2
  scopes:
    - variable.other.definition.pointer.function
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round.function.pointer
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round.function.pointer
- source: const
  scopesBegin:
    - meta.parameter
  scopes:
    - storage.modifier.specifier.const
- source: int
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: std
  scopes:
    - entity.name.scope-resolution.parameter
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution.parameter
- source: string
  scopes:
    - entity.name.type.parameter
  scopesEnd:
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.function.pointer
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func1
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: Type
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - meta.qualified-type
    - entity.name.type
- source: (
  scopes:
    - punctuation.section.parens.begin.bracket.round.function.pointer
- source: '*'
  scopes:
    - punctuation.definition.function.pointer.dereference
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round.function.pointer
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round.function.pointer
- source: const
  scopesBegin:
    - meta.parameter
  scopes:
    - storage.modifier.specifier.const
- source: int
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: std
  scopes:
    - entity.name.scope-resolution.parameter
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution.parameter
- source: string
  scopes:
    - entity.name.type.parameter
  scopesEnd:
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.function.pointer
- source: '='
  scopes:
    - keyword.operator.assignment
- source: fn_ptr2
  scopes:
    - variable.snake-case
    - variable.other.unknown.fn_ptr2
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func2
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: Type
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - meta.qualified-type
    - entity.name.type
- source: (
  scopes:
    - punctuation.section.parens.begin.bracket.round.function.pointer
- source: '*'
  scopes:
    - punctuation.definition.function.pointer.dereference
- source: name
  scopes:
    - variable.parameter.pointer.function
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round.function.pointer
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round.function.pointer
- source: const
  scopesBegin:
    - meta.parameter
  scopes:
    - storage.modifier.specifier.const
- source: int
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
  scopesEnd:
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.function.pointer
- source: '='
  scopes:
    - keyword.operator.assignment
- source: fn_ptr
  scopes:
    - variable.snake-case
    - variable.other.unknown.fn_ptr
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func3
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: Type
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - meta.qualified-type
    - entity.name.type
- source: (
  scopes:
    - punctuation.section.parens.begin.bracket.round.function.pointer
- source: '*'
  scopes:
    - punctuation.definition.function.pointer.dereference
- source: name
  scopes:
    - variable.parameter.pointer.function
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round.function.pointer
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round.function.pointer
- source: const
  scopesBegin:
    - meta.parameter
  scopes:
    - storage.modifier.specifier.const
- source: int
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
  scopesEnd:
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.function.pointer
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func4
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: Type
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - meta.qualified-type
    - entity.name.type
- source: (
  scopes:
    - punctuation.section.parens.begin.bracket.round.function.pointer
- source: '*'
  scopes:
    - punctuation.definition.function.pointer.dereference
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round.function.pointer
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round.function.pointer
- source: int
  scopesBegin:
    - meta.parameter
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: bool
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
  scopesEnd:
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.function.pointer
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func5
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: Type
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - entity.name.type.parameter
- source: name
  scopes:
    - variable.parameter
- source: '='
  scopes:
    - keyword.operator.assignment
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func6
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: Type
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - entity.name.type.parameter
- source: '='
  scopes:
    - keyword.operator.assignment
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func7
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: Type
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - entity.name.type.parameter
- source: name
  scopes:
    - variable.parameter
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func8
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: Type
  scopes:
    - meta.function.definition.parameters
    - meta.parameter
    - entity.name.type.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func9
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func11
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: Type
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - meta.qualified-type
    - entity.name.type
- source: (
  scopes:
    - punctuation.section.parens.begin.bracket.round.function.pointer
- source: '*'
  scopes:
    - punctuation.definition.function.pointer.dereference
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round.function.pointer
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round.function.pointer
- source: const
  scopesBegin:
    - meta.parameter
  scopes:
    - storage.modifier.specifier.const
- source: int
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: std
  scopes:
    - entity.name.scope-resolution.parameter
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution.parameter
- source: string
  scopes:
    - entity.name.type.parameter
  scopesEnd:
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.function.pointer
- source: '='
  scopes:
    - keyword.operator.assignment
- source: fn_ptr2
  scopes:
    - variable.snake-case
    - variable.other.unknown.fn_ptr2
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func12
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: Type
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - meta.qualified-type
    - entity.name.type
- source: (
  scopes:
    - punctuation.section.parens.begin.bracket.round.function.pointer
- source: '*'
  scopes:
    - punctuation.definition.function.pointer.dereference
- source: name
  scopes:
    - variable.parameter.pointer.function
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round.function.pointer
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round.function.pointer
- source: const
  scopesBegin:
    - meta.parameter
  scopes:
    - storage.modifier.specifier.const
- source: int
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
  scopesEnd:
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.function.pointer
- source: '='
  scopes:
    - keyword.operator.assignment
- source: fn_ptr
  scopes:
    - variable.snake-case
    - variable.other.unknown.fn_ptr
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func13
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: Type
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - meta.qualified-type
    - entity.name.type
- source: (
  scopes:
    - punctuation.section.parens.begin.bracket.round.function.pointer
- source: '*'
  scopes:
    - punctuation.definition.function.pointer.dereference
- source: name
  scopes:
    - variable.parameter.pointer.function
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round.function.pointer
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round.function.pointer
- source: const
  scopesBegin:
    - meta.parameter
  scopes:
    - storage.modifier.specifier.const
- source: int
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
  scopesEnd:
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.function.pointer
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func14
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: Type
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - meta.qualified-type
    - entity.name.type
- source: (
  scopes:
    - punctuation.section.parens.begin.bracket.round.function.pointer
- source: '*'
  scopes:
    - punctuation.definition.function.pointer.dereference
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round.function.pointer
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round.function.pointer
- source: int
  scopesBegin:
    - meta.parameter
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: bool
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
  scopesEnd:
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.function.pointer
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func15
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: Type
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - entity.name.type.parameter
- source: name
  scopes:
    - variable.parameter
- source: '='
  scopes:
    - keyword.operator.assignment
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func16
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: Type
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - entity.name.type.parameter
- source: '='
  scopes:
    - keyword.operator.assignment
- source: a
  scopes:
    - variable.lower-case
    - variable.other.unknown.a
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func17
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: Type
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - entity.name.type.parameter
- source: name
  scopes:
    - variable.parameter
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func18
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: Type
  scopes:
    - meta.function.definition.parameters
    - meta.parameter
    - entity.name.type.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func19
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func20
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: int
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: const
  scopes:
    - storage.modifier.specifier.const
- source: thing
  scopes:
    - variable.parameter
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: return
  scopesBegin:
    - meta.body.function.definition
  scopes:
    - keyword.control.return
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.body.function.definition
- source: void
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func21
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: const
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - storage.modifier.specifier.const
- source: int
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: thing
  scopes:
    - variable.parameter
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: return
  scopesBegin:
    - meta.body.function.definition
  scopes:
    - keyword.control.return
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.body.function.definition
- source: void
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func22
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: decltype
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - keyword.operator.functionlike
    - keyword.other.decltype
    - storage.type.decltype
- source: (
  scopes:
    - punctuation.section.arguments.begin.bracket.round.decltype
- source: '1'
  scopes:
    - meta.arguments.decltype
    - constant.numeric.decimal
- source: )
  scopes:
    - punctuation.section.arguments.end.bracket.round.decltype
- source: thing
  scopes:
    - variable.parameter
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: return
  scopesBegin:
    - meta.body.function.definition
  scopes:
    - keyword.control.return
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.body.function.definition
- source: void
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func23
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: const
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - storage.modifier.specifier.const
- source: Type
  scopes:
    - entity.name.type.parameter
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func24
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: const
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - storage.modifier.specifier.const
- source: int
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func25
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: short
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: const
  scopes:
    - storage.modifier.specifier.const
- source: int
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func26
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: const
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - storage.modifier.specifier.const
- source: short
  scopesBegin:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: int
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func27
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: bool
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: (
  scopes:
    - punctuation.section.parens.begin.bracket.round.function.pointer
- source: '*'
  scopes:
    - punctuation.definition.function.pointer.dereference
- source: name
  scopes:
    - variable.parameter.pointer.function
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round.function.pointer
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round.function.pointer
- source: int
  scopesBegin:
    - meta.parameter
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: int
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
  scopesEnd:
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.function.pointer
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: class
  scopesBegin:
    - meta.block.class
  scopes:
    - meta.head.class
    - storage.type.class
- source: GameState
  scopes:
    - entity.name.type.class
- source: '{'
  scopes:
    - meta.head.class
    - punctuation.section.block.begin.bracket.curly.class
- source: '}'
  scopes:
    - meta.body.class
    - punctuation.section.block.end.bracket.curly.class
- source: ;
  scopes:
    - punctuation.terminator.statement
  scopesEnd:
    - meta.block.class
- source: struct
  scopesBegin:
    - meta.block.struct
  scopes:
    - meta.head.struct
    - storage.type.struct
- source: Node
  scopes:
    - entity.name.type.struct
- source: '{'
  scopes:
    - meta.head.struct
    - punctuation.section.block.begin.bracket.curly.struct
- source: '}'
  scopes:
    - meta.body.struct
    - punctuation.section.block.end.bracket.curly.struct
- source: ;
  scopes:
    - punctuation.terminator.statement
  scopesEnd:
    - meta.block.struct
- source: enum
  scopesBegin:
    - meta.block.enum
    - meta.head.enum
  scopes:
    - storage.type.enum
- source: Thing
  scopes:
    - entity.name.type.enum
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.enum
  scopesEnd:
    - meta.head.enum
- source: '}'
  scopes:
    - meta.body.enum
    - punctuation.section.block.end.bracket.curly.enum
- source: ;
  scopes:
    - punctuation.terminator.statement
  scopesEnd:
    - meta.block.enum
- source: class
  scopesBegin:
    - meta.function.definition
    - meta.qualified-type
  scopes:
    - storage.type.class
- source: Node
  scopes:
    - entity.name.type
  scopesEnd:
    - meta.qualified-type
- source: '*'
  scopes:
    - storage.modifier.pointer
- source: exploreTree
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: class
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - storage.type.class
- source: GameState
  scopes:
    - entity.name.type.parameter
- source: '&'
  scopes:
    - storage.modifier.reference
- source: game
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: std
  scopes:
    - entity.name.scope-resolution.parameter
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution.parameter
- source: vector
  scopes:
    - entity.name.type.parameter
- source: <
  scopesBegin:
    - meta.template.call
  scopes:
    - punctuation.section.angle-brackets.begin.template.call
- source: int
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.call
  scopesEnd:
    - meta.template.call
- source: '&'
  scopes:
    - storage.modifier.reference
- source: searchList
  scopes:
    - variable.parameter
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
- source: class
  scopesBegin:
    - meta.qualified-type
  scopes:
    - storage.type.class
- source: Node
  scopes:
    - entity.name.type
  scopesEnd:
    - meta.qualified-type
- source: '*'
  scopes:
    - storage.modifier.pointer
- source: expandNode
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: struct
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - storage.type.struct
- source: Node
  scopes:
    - entity.name.type.parameter
- source: '*'
  scopes:
    - storage.modifier.pointer
- source: nodePtr
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: class
  scopes:
    - storage.type.class
- source: GameState
  scopes:
    - entity.name.type.parameter
- source: '&'
  scopes:
    - storage.modifier.reference
- source: game
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: std
  scopes:
    - entity.name.scope-resolution.parameter
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution.parameter
- source: vector
  scopes:
    - entity.name.type.parameter
- source: <
  scopesBegin:
    - meta.template.call
  scopes:
    - punctuation.section.angle-brackets.begin.template.call
- source: int
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.call
  scopesEnd:
    - meta.template.call
- source: '&'
  scopes:
    - storage.modifier.reference
- source: searchList
  scopes:
    - variable.parameter
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
- source: class
  scopesBegin:
    - meta.qualified-type
  scopes:
    - storage.type.class
- source: Node
  scopes:
    - entity.name.type
  scopesEnd:
    - meta.qualified-type
- source: '*'
  scopes:
    - storage.modifier.pointer
- source: expandNode
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: struct
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - storage.type.struct
- source: Node
  scopes:
    - entity.name.type.parameter
- source: '*'
  scopes:
    - storage.modifier.pointer
- source: nodePtr
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: enum
  scopes:
    - storage.type.enum
- source: Thing
  scopes:
    - entity.name.type.parameter
- source: '&'
  scopes:
    - storage.modifier.reference
- source: game
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: std
  scopes:
    - entity.name.scope-resolution.parameter
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution.parameter
- source: vector
  scopes:
    - entity.name.type.parameter
- source: <
  scopesBegin:
    - meta.template.call
  scopes:
    - punctuation.section.angle-brackets.begin.template.call
- source: int
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.call
  scopesEnd:
    - meta.template.call
- source: '&'
  scopes:
    - storage.modifier.reference
- source: searchList
  scopes:
    - variable.parameter
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
- source: template
  scopes:
    - storage.type.template
- source: <
  scopes:
    - punctuation.section.angle-brackets.begin.template.definition
- source: int
  scopesBegin:
    - meta.template.definition
  scopes:
    - storage.type.template.argument.int
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma.template.argument
- source: typename
  scopes:
    - storage.type.template.argument.typename
- source: Callable
  scopes:
    - entity.name.type.template
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma.template.argument
- source: typename
  scopes:
    - storage.type.template.argument.typename
- source: Ret
  scopes:
    - entity.name.type.template
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma.template.argument
- source: typename
  scopes:
    - storage.type.template.argument.typename
- source: ...
  scopes:
    - punctuation.vararg-ellipses.template.definition
- source: Args
  scopes:
    - entity.name.type.template
  scopesEnd:
    - meta.template.definition
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.definition
- source: auto
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: internalConversionToFuncPtr
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: Callable
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - entity.name.type.parameter
- source: '&'
  scopesBegin:
    - storage.modifier.reference
- source: '&'
  scopesEnd:
    - storage.modifier.reference
- source: a_callable
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: Ret
  scopes:
    - meta.qualified-type
    - entity.name.type
- source: (
  scopes:
    - punctuation.section.parens.begin.bracket.round.function.pointer
- source: '*'
  scopes:
    - punctuation.definition.function.pointer.dereference
- source: )
  scopes:
    - punctuation.section.parens.end.bracket.round.function.pointer
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round.function.pointer
- source: Args
  scopesBegin:
    - meta.parameter
  scopes:
    - entity.name.type.parameter
- source: ...
  scopes:
    - punctuation.vararg-ellipses
  scopesEnd:
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.function.pointer
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
- source: void
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: failedToLoadCriticalData
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: const
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - storage.modifier.specifier.const
- source: std
  scopes:
    - entity.name.scope-resolution.parameter
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution.parameter
- source: string
  scopes:
    - entity.name.type.parameter
- source: '&'
  scopes:
    - storage.modifier.reference
- source: what
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: bool
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: throwExcp
  scopes:
    - variable.parameter
- source: '='
  scopes:
    - keyword.operator.assignment
- source: 'false'
  scopes:
    - constant.language.false
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
- source: void
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: failedToLoadCriticalData
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: const
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - storage.modifier.specifier.const
- source: std
  scopes:
    - entity.name.scope-resolution.parameter
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution.parameter
- source: string
  scopes:
    - entity.name.type.parameter
- source: '*'
  scopes:
    - storage.modifier.pointer
- source: what
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: bool
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: throwExcp
  scopes:
    - variable.parameter
- source: '='
  scopes:
    - keyword.operator.assignment
- source: 'false'
  scopes:
    - constant.language.false
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
- source: //
  scopesBegin:
    - comment.line.double-slash
  scopes:
    - punctuation.definition.comment
- source: ' beginning of a function'
  scopesEnd:
    - comment.line.double-slash
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: aFunction
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: int
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: a
  scopes:
    - variable.parameter
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
  scopesEnd:
    - meta.function.definition
    - meta.head.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: void
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: func
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: short
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: a
  scopes:
    - variable.parameter
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: '}'
  scopes:
    - meta.body.function.definition
    - punctuation.section.block.end.bracket.curly.function.definition
- source: int
  scopes:
    - meta.qualified-type
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: main
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: int
  scopesBegin:
    - meta.function.definition.parameters
    - meta.parameter
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: argc
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: char
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: '*'
  scopes:
    - storage.modifier.pointer
- source: argv
  scopes:
    - variable.parameter
- source: '['
  scopesBegin:
    - meta.bracket.square.array
  scopes:
    - punctuation.definition.begin.bracket.square.array.type
- source: '1'
  scopes:
    - constant.numeric.decimal
- source: +
  scopes:
    - keyword.operator.arithmetic
- source: '1'
  scopes:
    - constant.numeric.decimal
- source: ']'
  scopes:
    - punctuation.definition.end.bracket.square.array.type
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
    - meta.bracket.square.array
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.function.definition
  scopesEnd:
    - meta.head.function.definition
- source: std
  scopesBegin:
    - meta.body.function.definition
  scopes:
    - entity.name.scope-resolution
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution
- source: cout
  scopes:
    - variable.lower-case
    - variable.other.unknown.cout
- source: '<<'
  scopes:
    - keyword.operator.bitwise.shift
- source: '"'
  scopesBegin:
    - string.quoted.double
  scopes:
    - punctuation.definition.string.begin
- source: done
- source: \n
  scopes:
    - constant.character.escape
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - string.quoted.double
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: return
  scopes:
    - keyword.control.return
- source: '0'
  scopes:
    - constant.numeric.decimal
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.function.definition
  scopesEnd:
    - meta.function.definition
    - meta.body.function.definition
- source: //
  scopesBegin:
    - comment.line.double-slash
  scopes:
    - punctuation.definition.comment
- source: ' TODO: add [[attribute]] examples'
