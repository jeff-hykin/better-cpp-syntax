- source: //
  scopesBegin:
    - comment.line.double-slash
  scopes:
    - punctuation.definition.comment
- source: ' This file is part of Asteria.'
- source: //
  scopes:
    - punctuation.definition.comment
- source: ' Copyleft 2018 - 2019, LH_Mouse. All wrongs reserved.'
  scopesEnd:
    - comment.line.double-slash
- source: '#'
  scopesBegin:
    - meta.preprocessor.include
    - keyword.control.directive.include
  scopes:
    - punctuation.definition.directive
- source: include
  scopesEnd:
    - keyword.control.directive.include
- source: '"'
  scopesBegin:
    - string.quoted.double.include
  scopes:
    - punctuation.definition.string.begin
- source: cow_string.hpp
- source: '"'
  scopes:
    - punctuation.definition.string.end
  scopesEnd:
    - meta.preprocessor.include
    - string.quoted.double.include
- source: namespace
  scopesBegin:
    - meta.block.namespace
    - meta.head.namespace
  scopes:
    - keyword.other.namespace.definition
    - storage.type.namespace.definition
- source: rocket
  scopes:
    - entity.name.namespace
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.namespace
  scopesEnd:
    - meta.head.namespace
- source: template
  scopesBegin:
    - meta.body.namespace
  scopes:
    - meta.template.explicit-instantiation
    - storage.type.template
- source: class
  scopesBegin:
    - meta.block.class
  scopes:
    - meta.head.class
    - storage.type.class
- source: basic_cow_string
  scopes:
    - entity.name.type.class
- source: <
  scopesBegin:
    - meta.head.class
    - meta.template.call
  scopes:
    - punctuation.section.angle-brackets.begin.template.call
- source: char
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.call
  scopesEnd:
    - meta.head.class
    - meta.template.call
- source: ;
  scopes:
    - punctuation.terminator.statement
  scopesEnd:
    - meta.block.class
- source: template
  scopes:
    - meta.template.explicit-instantiation
    - storage.type.template
- source: class
  scopesBegin:
    - meta.block.class
  scopes:
    - meta.head.class
    - storage.type.class
- source: basic_cow_string
  scopes:
    - entity.name.type.class
- source: <
  scopesBegin:
    - meta.head.class
    - meta.template.call
  scopes:
    - punctuation.section.angle-brackets.begin.template.call
- source: wchar_t
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.call
  scopesEnd:
    - meta.head.class
    - meta.template.call
- source: ;
  scopes:
    - punctuation.terminator.statement
  scopesEnd:
    - meta.block.class
- source: template
  scopes:
    - meta.template.explicit-instantiation
    - storage.type.template
- source: class
  scopesBegin:
    - meta.block.class
  scopes:
    - meta.head.class
    - storage.type.class
- source: basic_cow_string
  scopes:
    - entity.name.type.class
- source: <
  scopesBegin:
    - meta.head.class
    - meta.template.call
  scopes:
    - punctuation.section.angle-brackets.begin.template.call
- source: char16_t
  scopes:
    - support.type.posix-reserved
    - support.type.built-in.posix-reserved
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.call
  scopesEnd:
    - meta.head.class
    - meta.template.call
- source: ;
  scopes:
    - punctuation.terminator.statement
  scopesEnd:
    - meta.block.class
- source: template
  scopes:
    - meta.template.explicit-instantiation
    - storage.type.template
- source: class
  scopesBegin:
    - meta.block.class
  scopes:
    - meta.head.class
    - storage.type.class
- source: basic_cow_string
  scopes:
    - entity.name.type.class
- source: <
  scopesBegin:
    - meta.head.class
    - meta.template.call
  scopes:
    - punctuation.section.angle-brackets.begin.template.call
- source: char32_t
  scopes:
    - support.type.posix-reserved
    - support.type.built-in.posix-reserved
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.call
  scopesEnd:
    - meta.head.class
    - meta.template.call
- source: ;
  scopes:
    - punctuation.terminator.statement
  scopesEnd:
    - meta.block.class
- source: template
  scopes:
    - meta.template.explicit-instantiation
    - storage.type.template
- source: '::'
  scopesBegin:
    - meta.function.definition.special.operator-overload
    - meta.qualified-type
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution
- source: std
  scopes:
    - entity.name.scope-resolution
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution
- source: istream
  scopes:
    - entity.name.type
  scopesEnd:
    - meta.qualified-type
- source: '&'
  scopes:
    - storage.modifier.reference
- source: operator
  scopesBegin:
    - meta.head.function.definition.special.operator-overload
  scopes:
    - keyword.other.operator.overload
- source: '>>'
  scopes:
    - entity.name.operator
- source: (
  scopes:
    - >-
      punctuation.section.parameters.begin.bracket.round.special.operator-overload
- source: '::'
  scopesBegin:
    - meta.function.definition.parameters.special.operator-overload
- source: std
  scopes:
    - entity.name.scope-resolution
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution
- source: istream
  scopesBegin:
    - meta.parameter
  scopes:
    - entity.name.type.parameter
- source: '&'
  scopes:
    - storage.modifier.reference
- source: is
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: cow_string
  scopes:
    - entity.name.type.parameter
- source: '&'
  scopes:
    - storage.modifier.reference
- source: str
  scopes:
    - variable.parameter
  scopesEnd:
    - meta.function.definition.parameters.special.operator-overload
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.special.operator-overload
  scopesEnd:
    - meta.function.definition.special.operator-overload
    - meta.head.function.definition.special.operator-overload
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: template
  scopes:
    - meta.template.explicit-instantiation
    - storage.type.template
- source: '::'
  scopesBegin:
    - meta.function.definition.special.operator-overload
    - meta.qualified-type
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution
- source: std
  scopes:
    - entity.name.scope-resolution
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution
- source: wistream
  scopes:
    - entity.name.type
  scopesEnd:
    - meta.qualified-type
- source: '&'
  scopes:
    - storage.modifier.reference
- source: operator
  scopesBegin:
    - meta.head.function.definition.special.operator-overload
  scopes:
    - keyword.other.operator.overload
- source: '>>'
  scopes:
    - entity.name.operator
- source: (
  scopes:
    - >-
      punctuation.section.parameters.begin.bracket.round.special.operator-overload
- source: '::'
  scopesBegin:
    - meta.function.definition.parameters.special.operator-overload
- source: std
  scopes:
    - entity.name.scope-resolution
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution
- source: wistream
  scopesBegin:
    - meta.parameter
  scopes:
    - entity.name.type.parameter
- source: '&'
  scopes:
    - storage.modifier.reference
- source: is
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: cow_wstring
  scopes:
    - entity.name.type.parameter
- source: '&'
  scopes:
    - storage.modifier.reference
- source: str
  scopes:
    - variable.parameter
  scopesEnd:
    - meta.function.definition.parameters.special.operator-overload
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.special.operator-overload
  scopesEnd:
    - meta.function.definition.special.operator-overload
    - meta.head.function.definition.special.operator-overload
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: template
  scopes:
    - meta.template.explicit-instantiation
    - storage.type.template
- source: '::'
  scopesBegin:
    - meta.function.definition.special.operator-overload
    - meta.qualified-type
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution
- source: std
  scopes:
    - entity.name.scope-resolution
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution
- source: ostream
  scopes:
    - entity.name.type
  scopesEnd:
    - meta.qualified-type
- source: '&'
  scopes:
    - storage.modifier.reference
- source: operator
  scopesBegin:
    - meta.head.function.definition.special.operator-overload
  scopes:
    - keyword.other.operator.overload
- source: '<<'
  scopes:
    - entity.name.operator
- source: (
  scopes:
    - >-
      punctuation.section.parameters.begin.bracket.round.special.operator-overload
- source: '::'
  scopesBegin:
    - meta.function.definition.parameters.special.operator-overload
- source: std
  scopes:
    - entity.name.scope-resolution
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution
- source: ostream
  scopesBegin:
    - meta.parameter
  scopes:
    - entity.name.type.parameter
- source: '&'
  scopes:
    - storage.modifier.reference
- source: os
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: const
  scopes:
    - storage.modifier.specifier.const
- source: cow_string
  scopes:
    - entity.name.type.parameter
- source: '&'
  scopes:
    - storage.modifier.reference
- source: str
  scopes:
    - variable.parameter
  scopesEnd:
    - meta.function.definition.parameters.special.operator-overload
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.special.operator-overload
  scopesEnd:
    - meta.function.definition.special.operator-overload
    - meta.head.function.definition.special.operator-overload
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: template
  scopes:
    - meta.template.explicit-instantiation
    - storage.type.template
- source: '::'
  scopesBegin:
    - meta.function.definition.special.operator-overload
    - meta.qualified-type
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution
- source: std
  scopes:
    - entity.name.scope-resolution
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution
- source: wostream
  scopes:
    - entity.name.type
  scopesEnd:
    - meta.qualified-type
- source: '&'
  scopes:
    - storage.modifier.reference
- source: operator
  scopesBegin:
    - meta.head.function.definition.special.operator-overload
  scopes:
    - keyword.other.operator.overload
- source: '<<'
  scopes:
    - entity.name.operator
- source: (
  scopes:
    - >-
      punctuation.section.parameters.begin.bracket.round.special.operator-overload
- source: '::'
  scopesBegin:
    - meta.function.definition.parameters.special.operator-overload
- source: std
  scopes:
    - entity.name.scope-resolution
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution
- source: wostream
  scopesBegin:
    - meta.parameter
  scopes:
    - entity.name.type.parameter
- source: '&'
  scopes:
    - storage.modifier.reference
- source: os
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: const
  scopes:
    - storage.modifier.specifier.const
- source: cow_wstring
  scopes:
    - entity.name.type.parameter
- source: '&'
  scopes:
    - storage.modifier.reference
- source: str
  scopes:
    - variable.parameter
  scopesEnd:
    - meta.function.definition.parameters.special.operator-overload
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.special.operator-overload
  scopesEnd:
    - meta.function.definition.special.operator-overload
    - meta.head.function.definition.special.operator-overload
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: template
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.head.function.definition
    - storage.type.template
- source: '::'
  scopesBegin:
    - meta.qualified-type
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution
- source: std
  scopes:
    - entity.name.scope-resolution
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution
- source: istream
  scopes:
    - entity.name.type
  scopesEnd:
    - meta.qualified-type
- source: '&'
  scopes:
    - storage.modifier.reference
- source: getline
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: '::'
  scopesBegin:
    - meta.function.definition.parameters
- source: std
  scopes:
    - entity.name.scope-resolution
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution
- source: istream
  scopesBegin:
    - meta.parameter
  scopes:
    - entity.name.type.parameter
- source: '&'
  scopes:
    - storage.modifier.reference
- source: is
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: cow_string
  scopes:
    - entity.name.type.parameter
- source: '&'
  scopes:
    - storage.modifier.reference
- source: str
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: char
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: delim
  scopes:
    - variable.parameter
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
  scopesEnd:
    - meta.function.definition
    - meta.head.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: template
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.head.function.definition
    - storage.type.template
- source: '::'
  scopesBegin:
    - meta.qualified-type
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution
- source: std
  scopes:
    - entity.name.scope-resolution
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution
- source: wistream
  scopes:
    - entity.name.type
  scopesEnd:
    - meta.qualified-type
- source: '&'
  scopes:
    - storage.modifier.reference
- source: getline
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: '::'
  scopesBegin:
    - meta.function.definition.parameters
- source: std
  scopes:
    - entity.name.scope-resolution
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution
- source: wistream
  scopesBegin:
    - meta.parameter
  scopes:
    - entity.name.type.parameter
- source: '&'
  scopes:
    - storage.modifier.reference
- source: is
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: cow_wstring
  scopes:
    - entity.name.type.parameter
- source: '&'
  scopes:
    - storage.modifier.reference
- source: str
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: wchar_t
  scopes:
    - storage.type.primitive
    - storage.type.built-in.primitive
- source: delim
  scopes:
    - variable.parameter
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
  scopesEnd:
    - meta.function.definition
    - meta.head.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: template
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.head.function.definition
    - storage.type.template
- source: '::'
  scopesBegin:
    - meta.qualified-type
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution
- source: std
  scopes:
    - entity.name.scope-resolution
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution
- source: istream
  scopes:
    - entity.name.type
  scopesEnd:
    - meta.qualified-type
- source: '&'
  scopes:
    - storage.modifier.reference
- source: getline
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: '::'
  scopesBegin:
    - meta.function.definition.parameters
- source: std
  scopes:
    - entity.name.scope-resolution
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution
- source: istream
  scopesBegin:
    - meta.parameter
  scopes:
    - entity.name.type.parameter
- source: '&'
  scopes:
    - storage.modifier.reference
- source: is
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: cow_string
  scopes:
    - entity.name.type.parameter
- source: '&'
  scopes:
    - storage.modifier.reference
- source: str
  scopes:
    - variable.parameter
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
  scopesEnd:
    - meta.function.definition
    - meta.head.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: template
  scopesBegin:
    - meta.function.definition
  scopes:
    - meta.head.function.definition
    - storage.type.template
- source: '::'
  scopesBegin:
    - meta.qualified-type
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution
- source: std
  scopes:
    - entity.name.scope-resolution
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution
- source: wistream
  scopes:
    - entity.name.type
  scopesEnd:
    - meta.qualified-type
- source: '&'
  scopes:
    - storage.modifier.reference
- source: getline
  scopesBegin:
    - meta.head.function.definition
  scopes:
    - entity.name.function.definition
- source: (
  scopes:
    - punctuation.section.parameters.begin.bracket.round
- source: '::'
  scopesBegin:
    - meta.function.definition.parameters
- source: std
  scopes:
    - entity.name.scope-resolution
- source: '::'
  scopes:
    - punctuation.separator.namespace.access
    - punctuation.separator.scope-resolution
- source: wistream
  scopesBegin:
    - meta.parameter
  scopes:
    - entity.name.type.parameter
- source: '&'
  scopes:
    - storage.modifier.reference
- source: is
  scopes:
    - variable.parameter
- source: ','
  scopes:
    - punctuation.separator.delimiter.comma
- source: cow_wstring
  scopes:
    - entity.name.type.parameter
- source: '&'
  scopes:
    - storage.modifier.reference
- source: str
  scopes:
    - variable.parameter
  scopesEnd:
    - meta.function.definition.parameters
    - meta.parameter
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round
  scopesEnd:
    - meta.function.definition
    - meta.head.function.definition
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.namespace
  scopesEnd:
    - meta.block.namespace
    - meta.body.namespace
- source: //
  scopesBegin:
    - comment.line.double-slash
  scopes:
    - punctuation.definition.comment
- source: ' namespace rocket'
