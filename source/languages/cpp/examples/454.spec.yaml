- source: template
  scopes:
    - storage.type.template
- source: <
  scopes:
    - punctuation.section.angle-brackets.start.template.definition
- source: typename
  scopesBegin:
    - meta.template.definition
  scopes:
    - storage.type.template.argument.typename
- source: T
  scopes:
    - entity.name.type.template
  scopesEnd:
    - meta.template.definition
- source: '>'
  scopes:
    - punctuation.section.angle-brackets.end.template.definition
- source: class
  scopesBegin:
    - meta.block.class
    - meta.head.class
  scopes:
    - storage.type.class
- source: RefWrapper
  scopes:
    - entity.name.type.class
- source: '{'
  scopes:
    - punctuation.section.block.begin.bracket.curly.class
  scopesEnd:
    - meta.head.class
- source: operator
  scopesBegin:
    - meta.body.class
    - meta.function.definition.special.operator-overload
  scopes:
    - meta.head.function.definition.special.operator-overload
    - keyword.other.operator.overload
- source: T
  scopes:
    - meta.qualified_type
    - entity.name.type
- source: '&'
  scopes:
    - entity.name.operator.type.reference
- source: (
  scopesBegin:
    - meta.head.function.definition.special.operator-overload
  scopes:
    - >-
      punctuation.section.parameters.begin.bracket.round.special.operator-overload
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.special.operator-overload
  scopesEnd:
    - meta.function.definition.special.operator-overload
    - meta.head.function.definition.special.operator-overload
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: operator
  scopesBegin:
    - meta.function.definition.special.operator-overload
  scopes:
    - meta.head.function.definition.special.operator-overload
    - keyword.other.operator.overload
- source: const
  scopes:
    - storage.modifier.specifier.const
- source: T
  scopes:
    - meta.qualified_type
    - entity.name.type
- source: '&'
  scopes:
    - entity.name.operator.type.reference
- source: (
  scopesBegin:
    - meta.head.function.definition.special.operator-overload
  scopes:
    - >-
      punctuation.section.parameters.begin.bracket.round.special.operator-overload
- source: )
  scopes:
    - punctuation.section.parameters.end.bracket.round.special.operator-overload
  scopesEnd:
    - meta.function.definition.special.operator-overload
    - meta.head.function.definition.special.operator-overload
- source: ;
  scopes:
    - punctuation.terminator.statement
- source: //
  scopesBegin:
    - comment.line.double-slash
  scopes:
    - punctuation.definition.comment
- source: '  <-- "operator" not highlighted'
  scopesEnd:
    - comment.line.double-slash
- source: '}'
  scopes:
    - punctuation.section.block.end.bracket.curly.class
  scopesEnd:
    - meta.body.class
- source: ;
  scopes:
    - punctuation.terminator.statement
